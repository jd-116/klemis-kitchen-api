# AWS parameters
# ==============
# The AWS region to create resources in
aws_region = "us-east-1"
# Common tags applied to all components
common_tags = {
  environment = "production"
  owner       = "<REPLACE_ME>"
  project     = "klemis-kitchen-api"
}
# The name of the Elastic Beanstalk environment to host the API in
application_name = "klemis-kitchen-api"
# The name of the Elastic Beanstalk application to host the API in
environment_name = "klemiskitchenapi-env"
# The EC2 instance type to host the API on
# https://aws.amazon.com/ec2/instance-types/
instance_type = "t3a.micro"

# Website parameters
# ==================
# The root domain that the entire application will be hosted at
root_domain = "klemis-kitchen.com"
# The sub-domain that the API will be hosted at. This shouldn't include the root domain
api_subdomain = "api"
# The sub-domain that the admin dashboard will be hosted at. This shouldn't include the root domain
admin_subdomain = "admin"
# The URL that the site will redirect to when accessed at the apex domain
apex_redirect_url = "https://studentlife.gatech.edu/content/star-services"
# The port that the API server listens on and the port that the internal nginx proxy server directs traffic to
api_internal_port = 5000

# Authentication parameters
# =========================
# Whether the flow continuation cookies used between redirects should be secure (HTTPS-only)
auth_secure_continuation = true
# List of prefixes to match authentication redirect URIs against (should include this API).
# If empty, then all URIs are allowed.
# If null, then this defaults to only the API subdomain on HTTPS
auth_redirect_uri_prefixes = null
# The (base64-encoded) encryption secret used for signing JWTs (should be between 128 and 512 bits)
auth_jwt_secret = "<REPLACE_ME>"
# The number of hours after which to expire JWTs (and require re-authentication). Empty disables expiration
auth_jwt_token_expires_after = ""

# MongoDB connection credentials
# ==============================
# The username for a MongoDB Atlas account that can access the API's database instance
mongo_db_username = "<REPLACE_ME>"
# The password for a MongoDB Atlas account that can access the API's database instance
mongo_db_password = "<REPLACE_ME>"
# The name of the MongoDB Atlas cluster that the app is running on
mongo_db_cluster_name = "<REPLACE_ME>"
# The name of the MongoDB database (collection of collections) that all of the API's collections should reside in
mongo_db_database_name = "<REPLACE_ME>"

# Transact API connection credentials/parameters
# ==============================================
# The base URL of the Transact API to retrieve inventory data from
transact_base_url = "https://qpc.transactcampus.com"
# The 'tenant' in Transact to that the API should authenticate against and download inventory for
transact_tenant = "gatech"
# The username for a Transact account that can access and execute favorite reports to obtain inventory data
transact_username = "<REPLACE_ME>"
# The password for a Transact account that can access and execute favorite reports to obtain inventory data
transact_password = "<REPLACE_ME>"
# The period to wait between fetches of the current inventory.
# This affects data liveness served by the API as well as the load induced on Transact
transact_fetch_period = "10m"
# The period to wait between 'reloading' the Transact session (simulating logging out and back in again)
transact_reload_session_period = "30m"
# The name of the favorite report created in Transact
# that should be based on 'Item List with Inventory Details' and output CSV
transact_csv_favorite_report_name = "Klemis Inventory CSV"
# The period to wait between seeing if a newly-requested report is ready to download
transact_report_poll_period = "10s"
# The period to wait before giving up on a requested report after which it errors
transact_report_poll_timeout = "5m"
# The 0-based offset for the cell that the product's name exists in,
# relative to the cell that indicates the profit center
transact_csv_report_id_column_offset = "9"
# The 0-based offset for the cell that the product's ID exists in,
# relative to the cell that indicates the profit center
transact_csv_report_name_column_offset = "10"
# The 0-based offset for the cell that the product's current quantity exists in,
# relative to the cell that indicates the profit center
transact_csv_report_qty_column_offset = "13"
# The prefix that exists in each cell that also contains the profit center.
# For example, 'Profit Center -' matches cells with the contents:
# - 'Profit Center - Pantry A'
#    (which turns into the profit center name 'Pantry A')
# - 'Profit Centry - Location 002'
#    (which turns into the profit center name 'Location 002')
transact_profit_center_prefix = "Profit Center - "
# The expected '__type' field of the report that the scraper searches for.
# This is an internal value in the Transact API
transact_csv_report_type = "qpsview_reports_schedules:#QPWebOffice.Web"

# Single-sign-on parameters
# =========================
# The base URL (including the trailing '/cas/')
# for the CAS (single-sign-on) server that is used to authenticate users.
# The API uses CAS protocol version 2 to implement communication with the SSO provider:
# https://apereo.github.io/cas/5.1.x/protocol/CAS-Protocol-V2-Specification.html
cas_server_url = "https://login.gatech.edu/cas/"

# Upload parameters
# =============================
# The max size of files that can be uploaded using the API to S3
upload_max_size = "4GB"
# The size of chunks to use when uploading files to S3
upload_part_size = "6MB"
